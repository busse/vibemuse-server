name: CI
on: [pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
        with:
          version: latest

      # Bring up an *ephemeral* local stack inside the runner
      - run: supabase db start

      # Apply every migration to the temp DB
      - run: supabase db reset

      # Optional: keep your TS types in sync
      - run: supabase gen types typescript --local > types/supabase.gen.ts

      # Set up Node.js and install dependencies
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install API dependencies
        run: cd api && npm ci

      # Run linter
      - name: Run linter
        run: npm run lint

      # Run type checking
      - name: Run type checking
        run: cd api && npm run type-check

      # Build project
      - name: Build project
        run: npm run build

      # Run your unit / integration tests here
      - name: Run tests
        run: cd api && npm test -- --passWithNoTests
        env:
          NODE_ENV: test
          JWT_SECRET: test-secret-key-32-characters-long
          ENCRYPTION_KEY: test-encryption-key-32-characters
          SUPABASE_URL: http://127.0.0.1:54321
          SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
          SUPABASE_SERVICE_ROLE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
          DATABASE_URL: postgresql://postgres:postgres@127.0.0.1:54322/postgres